{"version":3,"file":"poi-types.js","sourceRoot":"","sources":["../../../../../node/src/models/poi-types.ts"],"names":[],"mappings":"","sourcesContent":["import {\n  BlindedCommitmentData,\n  POIEventType,\n  POIStatus,\n  TXIDVersion,\n} from '@railgun-community/shared-models';\n\nexport type POIEventShield = {\n  type: POIEventType.Shield;\n  blindedCommitment: string;\n  commitmentHash: string;\n};\n\nexport type POIEventTransact = {\n  type: POIEventType.Transact;\n  blindedCommitment: string;\n};\n\nexport type POIEventUnshield = {\n  type: POIEventType.Unshield;\n  blindedCommitment: string;\n};\n\nexport type POIEventLegacyTransact = {\n  type: POIEventType.LegacyTransact;\n  blindedCommitment: string;\n};\n\nexport type POIEvent =\n  | POIEventShield\n  | POIEventTransact\n  | POIEventUnshield\n  | POIEventLegacyTransact;\n\nexport type SignedPOIEvent = {\n  index: number;\n  blindedCommitment: string;\n  signature: string;\n  type: POIEventType;\n};\n\nexport type SignedBlockedShield = {\n  commitmentHash: string;\n  blindedCommitment: string;\n  blockReason: Optional<string>;\n  signature: string;\n};\n\nexport type SubmitPOIEventParams = {\n  txidVersion: TXIDVersion;\n  signedPOIEvent: SignedPOIEvent;\n  listKey: string;\n  validatedMerkleroot: string;\n};\n\nexport type SubmitValidatedTxidAndMerklerootParams = {\n  txidVersion: TXIDVersion;\n  txidIndex: number;\n  merkleroot: string;\n  signature: string;\n  listKey: string;\n};\n\nexport type RemoveTransactProofParams = {\n  txidVersion: TXIDVersion;\n  blindedCommitmentsOut: string[];\n  railgunTxidIfHasUnshield: string;\n  signature: string;\n  listKey: string;\n};\n\nexport type GetLegacyTransactProofsParams = {\n  txidVersion: TXIDVersion;\n  bloomFilterSerialized: string;\n};\n\nexport type GetPOIListEventRangeParams = {\n  txidVersion: TXIDVersion;\n  listKey: string;\n  startIndex: number;\n  endIndex: number;\n};\n\nexport type POISyncedListEvent = {\n  signedPOIEvent: SignedPOIEvent;\n\n  // TODO: Make required after Node DBs are migrated.\n  validatedMerkleroot: Optional<string>;\n};\n\nexport type GetPOIsPerBlindedCommitmentParams = {\n  txidVersion: TXIDVersion;\n  listKey: string;\n  blindedCommitmentDatas: BlindedCommitmentData[];\n};\n\nexport type POIsPerBlindedCommitmentMap = {\n  [blindedCommitment: string]: POIStatus;\n};\n"]}